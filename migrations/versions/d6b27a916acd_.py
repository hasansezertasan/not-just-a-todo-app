""" Initial Database Revision

Revision ID: d6b27a916acd
Revises:
Create Date: 2024-04-03 06:34:56.360137

"""

import sqlalchemy as sa
import sqlalchemy_utils
from alembic import op

# revision identifiers, used by Alembic.
revision = "d6b27a916acd"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "user",
        sa.Column("username", sa.String(), nullable=False),
        sa.Column(
            "hashed_password",
            sqlalchemy_utils.types.password.PasswordType(max_length=1024),
            nullable=False,
        ),
        sa.Column("first_name", sa.String(), nullable=False),
        sa.Column("last_name", sa.String(), nullable=False),
        sa.Column(
            "email", sqlalchemy_utils.types.email.EmailType(length=255), nullable=True
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=False),
        sa.Column("date_updated", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("username"),
    )
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_user_date_created"), ["date_created"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_user_date_updated"), ["date_updated"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_user_email"), ["email"], unique=True)
        batch_op.create_index(batch_op.f("ix_user_id"), ["id"], unique=False)

    op.create_table(
        "sequence_template",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=False),
        sa.Column("date_updated", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("sequence_template", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_sequence_template_date_created"),
            ["date_created"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_sequence_template_date_updated"),
            ["date_updated"],
            unique=False,
        )
        batch_op.create_index(
            batch_op.f("ix_sequence_template_id"), ["id"], unique=False
        )

    op.create_table(
        "sequence",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("template_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=False),
        sa.Column("date_updated", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["template_id"],
            ["sequence_template.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("sequence", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_sequence_date_created"), ["date_created"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_sequence_date_updated"), ["date_updated"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_sequence_id"), ["id"], unique=False)

    op.create_table(
        "task_template",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("sequence_template_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=False),
        sa.Column("date_updated", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sequence_template_id"],
            ["sequence_template.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("task_template", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_task_template_date_created"), ["date_created"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_task_template_date_updated"), ["date_updated"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_task_template_id"), ["id"], unique=False)

    op.create_table(
        "task",
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=False),
        sa.Column("sequence_id", sa.Integer(), nullable=False),
        sa.Column("date_completed", sa.DateTime(), nullable=True),
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("date_created", sa.DateTime(), nullable=False),
        sa.Column("date_updated", sa.DateTime(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["sequence_id"],
            ["sequence.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    with op.batch_alter_table("task", schema=None) as batch_op:
        batch_op.create_index(
            batch_op.f("ix_task_date_created"), ["date_created"], unique=False
        )
        batch_op.create_index(
            batch_op.f("ix_task_date_updated"), ["date_updated"], unique=False
        )
        batch_op.create_index(batch_op.f("ix_task_id"), ["id"], unique=False)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("task", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_task_id"))
        batch_op.drop_index(batch_op.f("ix_task_date_updated"))
        batch_op.drop_index(batch_op.f("ix_task_date_created"))

    op.drop_table("task")
    with op.batch_alter_table("task_template", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_task_template_id"))
        batch_op.drop_index(batch_op.f("ix_task_template_date_updated"))
        batch_op.drop_index(batch_op.f("ix_task_template_date_created"))

    op.drop_table("task_template")
    with op.batch_alter_table("sequence", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_sequence_id"))
        batch_op.drop_index(batch_op.f("ix_sequence_date_updated"))
        batch_op.drop_index(batch_op.f("ix_sequence_date_created"))

    op.drop_table("sequence")
    with op.batch_alter_table("sequence_template", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_sequence_template_id"))
        batch_op.drop_index(batch_op.f("ix_sequence_template_date_updated"))
        batch_op.drop_index(batch_op.f("ix_sequence_template_date_created"))

    op.drop_table("sequence_template")
    with op.batch_alter_table("user", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_user_id"))
        batch_op.drop_index(batch_op.f("ix_user_email"))
        batch_op.drop_index(batch_op.f("ix_user_date_updated"))
        batch_op.drop_index(batch_op.f("ix_user_date_created"))

    op.drop_table("user")
    # ### end Alembic commands ###
